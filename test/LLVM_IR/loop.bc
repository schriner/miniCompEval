; ModuleID = 'loop'
source_filename = "loop"

@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@2 = private unnamed_addr constant [20 x i8] c"Factorial of 10 is:\00", align 1

declare i32 @printf(ptr %0, ...)

define i32 @Factorialcompute10() {
EntryBlock:
  %0 = alloca i32, i32 0, align 4
  %1 = alloca i32, i32 0, align 4
  store i32 1, ptr %1, align 4
  store i32 1, ptr %0, align 4
  %2 = load i32, ptr %1, align 4
  %3 = icmp sle i32 %2, 10
  br i1 %3, label %w, label %s

w:                                                ; preds = %w, %EntryBlock
  %4 = load i32, ptr %0, align 4
  %5 = load i32, ptr %1, align 4
  %6 = mul i32 %4, %5
  store i32 %6, ptr %0, align 4
  %7 = load i32, ptr %1, align 4
  %8 = add i32 %7, 1
  store i32 %8, ptr %1, align 4
  %9 = load i32, ptr %1, align 4
  %10 = icmp sle i32 %9, 10
  br i1 %10, label %w, label %s

s:                                                ; preds = %w, %EntryBlock
  %11 = load i32, ptr %0, align 4
  ret i32 %11
}

define i32 @main() {
EntryBlock:
  %0 = call i32 (ptr, ...) @printf(ptr @2)
  %1 = call i32 @Factorialcompute10()
  %2 = call i32 (ptr, ...) @printf(ptr @1, i32 %1)
  ret i32 0
}
