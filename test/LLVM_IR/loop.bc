; ModuleID = 'loop'
source_filename = "loop"

@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"Divide 7/3:\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"Divide 6/3:\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"Divide 0/3:\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"Divide 2/3:\00", align 1
@6 = private unnamed_addr constant [13 x i8] c"Divide -2/3:\00", align 1
@7 = private unnamed_addr constant [13 x i8] c"Divide -6/3:\00", align 1
@8 = private unnamed_addr constant [13 x i8] c"Divide -7/3:\00", align 1
@9 = private unnamed_addr constant [20 x i8] c"Factorial of 10 is:\00", align 1

declare i32 @printf(ptr %0, ...)

define i32 @Factorialcompute10(ptr %0) {
EntryBlock:
  %1 = alloca i32, align 4
  store ptr %0, ptr %1, align 8
  %2 = alloca i32, i32 0, align 4
  %3 = alloca i32, i32 0, align 4
  %4 = alloca i1, i1 false, align 4
  store i32 1, ptr %3, align 4
  store i32 1, ptr %2, align 4
  %5 = load i32, ptr %3, align 4
  %6 = icmp sle i32 %5, 10
  br i1 %6, label %w, label %s_w

w:                                                ; preds = %w, %EntryBlock
  %7 = load i32, ptr %2, align 4
  %8 = load i32, ptr %3, align 4
  %9 = mul i32 %7, %8
  store i32 %9, ptr %2, align 4
  %10 = load i32, ptr %3, align 4
  %11 = add i32 %10, 1
  store i32 %11, ptr %3, align 4
  %12 = load i32, ptr %3, align 4
  %13 = icmp sle i32 %12, 10
  br i1 %13, label %w, label %s_w

s_w:                                              ; preds = %w, %EntryBlock
  %14 = load i32, ptr %2, align 4
  ret i32 %14
}

define i32 @main() {
EntryBlock:
  %0 = call i32 (ptr, ...) @printf(ptr @2)
  %1 = sdiv i32 7, 3
  %2 = call i32 (ptr, ...) @printf(ptr @1, i32 %1)
  %3 = call i32 (ptr, ...) @printf(ptr @3)
  %4 = sdiv i32 6, 3
  %5 = call i32 (ptr, ...) @printf(ptr @1, i32 %4)
  %6 = call i32 (ptr, ...) @printf(ptr @4)
  %7 = sdiv i32 0, 3
  %8 = call i32 (ptr, ...) @printf(ptr @1, i32 %7)
  %9 = call i32 (ptr, ...) @printf(ptr @5)
  %10 = sdiv i32 2, 3
  %11 = call i32 (ptr, ...) @printf(ptr @1, i32 %10)
  %12 = call i32 (ptr, ...) @printf(ptr @6)
  %13 = mul i32 -1, 2
  %14 = sdiv i32 %13, 3
  %15 = call i32 (ptr, ...) @printf(ptr @1, i32 %14)
  %16 = call i32 (ptr, ...) @printf(ptr @7)
  %17 = mul i32 -1, 6
  %18 = sdiv i32 %17, 3
  %19 = call i32 (ptr, ...) @printf(ptr @1, i32 %18)
  %20 = call i32 (ptr, ...) @printf(ptr @8)
  %21 = mul i32 -1, 7
  %22 = sdiv i32 %21, 3
  %23 = call i32 (ptr, ...) @printf(ptr @1, i32 %22)
  %24 = call i32 (ptr, ...) @printf(ptr @9)
  %25 = call i32 @Factorialcompute10(i32 0)
  %26 = call i32 (ptr, ...) @printf(ptr @1, i32 %25)
  ret i32 0
}
