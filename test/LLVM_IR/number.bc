; ModuleID = 'number'
source_filename = "number"

@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@2 = private unnamed_addr constant [17 x i8] c"10 choose 4 is \0A\00", align 1
@3 = private unnamed_addr constant [20 x i8] c"GCD of 84, 132 is \0A\00", align 1

declare i32 @printf(ptr %0, ...)

define i32 @Numberschoose(i32 %0, i32 %1) {
EntryBlock:
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %3 = alloca i32, align 4
  store i32 %1, ptr %3, align 4
  %4 = alloca i32, i32 0, align 4
  %5 = alloca i32, i32 0, align 4
  %6 = load i32, ptr %2, align 4
  %7 = load i32, ptr %3, align 4
  %8 = icmp slt i32 %6, %7
  %9 = xor i1 %8, true
  br i1 %9, label %if, label %el

if:                                               ; preds = %EntryBlock
  store i32 1, ptr %5, align 4
  store i32 1, ptr %4, align 4
  %10 = load i32, ptr %5, align 4
  %11 = load i32, ptr %3, align 4
  %12 = icmp sle i32 %10, %11
  br i1 %12, label %w, label %s_w

w:                                                ; preds = %w, %if
  %13 = load i32, ptr %4, align 4
  %14 = load i32, ptr %2, align 4
  %15 = load i32, ptr %3, align 4
  %16 = sub i32 %14, %15
  %17 = load i32, ptr %5, align 4
  %18 = add i32 %16, %17
  %19 = mul i32 %13, %18
  %20 = load i32, ptr %5, align 4
  %21 = sdiv i32 %19, %20
  store i32 %21, ptr %4, align 4
  %22 = load i32, ptr %5, align 4
  %23 = add i32 %22, 1
  store i32 %23, ptr %5, align 4
  %24 = load i32, ptr %5, align 4
  %25 = load i32, ptr %3, align 4
  %26 = icmp sle i32 %24, %25
  br i1 %26, label %w, label %s_w

s_w:                                              ; preds = %w, %if
  br label %s

el:                                               ; preds = %EntryBlock
  store i32 0, ptr %4, align 4
  br label %s

s:                                                ; preds = %s_w, %el
  %27 = load i32, ptr %4, align 4
  ret i32 %27
}

define i32 @Numbersgcd(i32 %0, i32 %1) {
EntryBlock:
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %3 = alloca i32, align 4
  store i32 %1, ptr %3, align 4
  %4 = alloca i32, i32 0, align 4
  %5 = alloca i32, i32 0, align 4
  %6 = load i32, ptr %2, align 4
  %7 = load i32, ptr %3, align 4
  %8 = icmp slt i32 %6, %7
  br i1 %8, label %if, label %s

if:                                               ; preds = %EntryBlock, <null operand!>
  %9 = load i32, ptr %2, align 4
  store i32 %9, ptr %4, align 4
  %10 = load i32, ptr %3, align 4
  store i32 %10, ptr %2, align 4
  %11 = load i32, ptr %4, align 4
  store i32 %11, ptr %3, align 4
  br label %s

s:                                                ; preds = %if, %EntryBlock
  %12 = load i32, ptr %3, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %if1, label %el

if1:                                              ; preds = %s
  %14 = load i32, ptr %2, align 4
  store i32 %14, ptr %5, align 4
  br label %s5

el:                                               ; preds = %s
  %15 = load i32, ptr %2, align 4
  %16 = load i32, ptr %3, align 4
  %17 = sdiv i32 %15, %16
  %18 = load i32, ptr %3, align 4
  %19 = mul i32 %17, %18
  %20 = load i32, ptr %2, align 4
  %21 = icmp ne i32 %19, %20
  br i1 %21, label %if2, label %el3

if2:                                              ; preds = %el
  %22 = load i32, ptr %3, align 4
  %23 = load i32, ptr %2, align 4
  %24 = load i32, ptr %3, align 4
  %25 = load i32, ptr %2, align 4
  %26 = load i32, ptr %3, align 4
  %27 = sdiv i32 %25, %26
  %28 = mul i32 %24, %27
  %29 = sub i32 %23, %28
  %30 = call i32 @Numbersgcd(i32 %22, i32 %29)
  store i32 %30, ptr %5, align 4
  br label %s4

el3:                                              ; preds = %el
  %31 = load i32, ptr %3, align 4
  store i32 %31, ptr %5, align 4
  br label %s4

s4:                                               ; preds = %if2, %el3
  br label %s5

s5:                                               ; preds = %if1, %s4
  %32 = load i32, ptr %5, align 4
  ret i32 %32
}

define i32 @main() {
EntryBlock:
  %0 = call i32 (ptr, ...) @printf(ptr @2)
  %1 = call i32 @Numberschoose(i32 10, i32 4)
  %2 = call i32 (ptr, ...) @printf(ptr @1, i32 %1)
  %3 = call i32 (ptr, ...) @printf(ptr @3)
  %4 = call i32 @Numbersgcd(i32 84, i32 132)
  %5 = call i32 (ptr, ...) @printf(ptr @1, i32 %4)
  ret i32 0
}
