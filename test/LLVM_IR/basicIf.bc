; ModuleID = 'basicIf'
source_filename = "basicIf"

@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@2 = private unnamed_addr constant [54 x i8] c"This line should be printed. A bunch of expressions:\0A\00", align 1
@3 = private unnamed_addr constant [33 x i8] c"This line should not be printed\0A\00", align 1
@4 = private unnamed_addr constant [16 x i8] c"If true passes\0A\00", align 1
@5 = private unnamed_addr constant [15 x i8] c"If true fails\0A\00", align 1
@6 = private unnamed_addr constant [16 x i8] c"If false fails\0A\00", align 1
@7 = private unnamed_addr constant [17 x i8] c"If false passes\0A\00", align 1

declare i32 @printf(ptr %0, ...)

define i32 @main() {
EntryBlock:
  %0 = icmp slt i32 2, 3
  br i1 %0, label %if, label %el

if:                                               ; preds = %EntryBlock
  %1 = call i32 (ptr, ...) @printf(ptr @2)
  %2 = call i32 (ptr, ...) @printf(ptr @1, i32 5)
  %3 = add i32 3, 4
  %4 = add i32 %3, 5
  %5 = add i32 %4, 35
  %6 = call i32 (ptr, ...) @printf(ptr @1, i32 %5)
  %7 = sub i32 32, 70
  %8 = sub i32 %7, 2
  %9 = add i32 %8, 9
  %10 = call i32 (ptr, ...) @printf(ptr @1, i32 %9)
  %11 = add i32 5, 3
  %12 = mul i32 %11, 17
  %13 = call i32 (ptr, ...) @printf(ptr @1, i32 %12)
  br label %s

el:                                               ; preds = %EntryBlock
  %14 = call i32 (ptr, ...) @printf(ptr @3)
  br label %s

s:                                                ; preds = %if, %el
  br i1 true, label %if1, label %el2

if1:                                              ; preds = %s
  %15 = call i32 (ptr, ...) @printf(ptr @4)
  br label %s3

el2:                                              ; preds = %s
  %16 = call i32 (ptr, ...) @printf(ptr @5)
  br label %s3

s3:                                               ; preds = %if1, %el2
  br i1 false, label %if4, label %el5

if4:                                              ; preds = %s3
  %17 = call i32 (ptr, ...) @printf(ptr @6)
  br label %s6

el5:                                              ; preds = %s3
  %18 = call i32 (ptr, ...) @printf(ptr @7)
  br label %s6

s6:                                               ; preds = %if4, %el5
  ret i32 0
}
