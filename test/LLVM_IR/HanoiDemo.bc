; ModuleID = 'HanoiDemo'
source_filename = "HanoiDemo"

@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@2 = private unnamed_addr constant [13 x i8] c"move 1 from \00", align 1
@3 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [6 x i8] c"move \00", align 1
@6 = private unnamed_addr constant [7 x i8] c" from \00", align 1
@7 = private unnamed_addr constant [5 x i8] c" to \00", align 1

declare i32 @printf(ptr %0, ...)

define i32 @Hanoistart(i32 %0) {
EntryBlock:
  %1 = alloca i32, align 4
  store i32 %0, ptr %1, align 4
  %2 = alloca i32, i32 0, align 4
  %3 = load i32, ptr %1, align 4
  %4 = call i32 @Hanoirecursive(i32 %3, i32 1, i32 2, i32 3)
  store i32 %4, ptr %2, align 4
  ret i32 1
}

define i32 @Hanoirecursive(i32 %0, i32 %1, i32 %2, i32 %3) {
EntryBlock:
  %4 = alloca i32, align 4
  store i32 %0, ptr %4, align 4
  %5 = alloca i32, align 4
  store i32 %1, ptr %5, align 4
  %6 = alloca i32, align 4
  store i32 %2, ptr %6, align 4
  %7 = alloca i32, align 4
  store i32 %3, ptr %7, align 4
  %8 = alloca i32, i32 0, align 4
  %9 = load i32, ptr %4, align 4
  %10 = icmp sle i32 %9, 1
  br i1 %10, label %if, label %el

if:                                               ; preds = %EntryBlock
  %11 = call i32 (ptr, ...) @printf(ptr @2)
  %12 = load i32, ptr %5, align 4
  %13 = call i32 (ptr, ...) @printf(ptr @0, i32 %12)
  %14 = call i32 (ptr, ...) @printf(ptr @3)
  %15 = load i32, ptr %7, align 4
  %16 = call i32 (ptr, ...) @printf(ptr @0, i32 %15)
  %17 = call i32 (ptr, ...) @printf(ptr @4)
  br label %s

el:                                               ; preds = %EntryBlock
  %18 = load i32, ptr %4, align 4
  %19 = sub i32 %18, 1
  %20 = load i32, ptr %5, align 4
  %21 = load i32, ptr %7, align 4
  %22 = load i32, ptr %6, align 4
  %23 = call i32 @Hanoirecursive(i32 %19, i32 %20, i32 %21, i32 %22)
  store i32 %23, ptr %8, align 4
  %24 = call i32 (ptr, ...) @printf(ptr @5)
  %25 = load i32, ptr %4, align 4
  %26 = call i32 (ptr, ...) @printf(ptr @0, i32 %25)
  %27 = call i32 (ptr, ...) @printf(ptr @6)
  %28 = load i32, ptr %5, align 4
  %29 = call i32 (ptr, ...) @printf(ptr @0, i32 %28)
  %30 = call i32 (ptr, ...) @printf(ptr @7)
  %31 = load i32, ptr %7, align 4
  %32 = call i32 (ptr, ...) @printf(ptr @1, i32 %31)
  %33 = load i32, ptr %4, align 4
  %34 = sub i32 %33, 1
  %35 = load i32, ptr %6, align 4
  %36 = load i32, ptr %5, align 4
  %37 = load i32, ptr %7, align 4
  %38 = call i32 @Hanoirecursive(i32 %34, i32 %35, i32 %36, i32 %37)
  store i32 %38, ptr %8, align 4
  br label %s

s:                                                ; preds = %if, %el
  ret i32 0
}

define i32 @main() {
EntryBlock:
  %0 = call i32 @Hanoistart(i32 5)
  %1 = call i32 (ptr, ...) @printf(ptr @1, i32 %0)
  ret i32 0
}
