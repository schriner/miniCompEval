; ModuleID = 'HanoiDemo'
source_filename = "HanoiDemo"

@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@2 = private unnamed_addr constant [13 x i8] c"move 1 from \00", align 1
@3 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [6 x i8] c"move \00", align 1
@6 = private unnamed_addr constant [7 x i8] c" from \00", align 1
@7 = private unnamed_addr constant [5 x i8] c" to \00", align 1

declare i32 @printf(ptr %0, ...)

define i32 @Hanoistart(ptr %0, i32 %1) {
EntryBlock:
  %2 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %3 = alloca i32, align 4
  store i32 %1, ptr %3, align 4
  %4 = alloca i32, i32 0, align 4
  %5 = load i32, ptr %3, align 4
  %6 = call i32 @Hanoirecursive(i32 0, i32 %5, i32 1, i32 2, i32 3)
  store i32 %6, ptr %4, align 4
  ret i32 1
}

define i32 @Hanoirecursive(ptr %0, i32 %1, i32 %2, i32 %3, i32 %4) {
EntryBlock:
  %5 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  %6 = alloca i32, align 4
  store i32 %1, ptr %6, align 4
  %7 = alloca i32, align 4
  store i32 %2, ptr %7, align 4
  %8 = alloca i32, align 4
  store i32 %3, ptr %8, align 4
  %9 = alloca i32, align 4
  store i32 %4, ptr %9, align 4
  %10 = alloca i32, i32 0, align 4
  %11 = load i32, ptr %6, align 4
  %12 = icmp sle i32 %11, 1
  br i1 %12, label %if, label %el

if:                                               ; preds = %EntryBlock
  %13 = call i32 (ptr, ...) @printf(ptr @2)
  %14 = load i32, ptr %7, align 4
  %15 = call i32 (ptr, ...) @printf(ptr @0, i32 %14)
  %16 = call i32 (ptr, ...) @printf(ptr @3)
  %17 = load i32, ptr %9, align 4
  %18 = call i32 (ptr, ...) @printf(ptr @0, i32 %17)
  %19 = call i32 (ptr, ...) @printf(ptr @4)
  br label %s

el:                                               ; preds = %EntryBlock
  %20 = load i32, ptr %6, align 4
  %21 = sub i32 %20, 1
  %22 = load i32, ptr %7, align 4
  %23 = load i32, ptr %9, align 4
  %24 = load i32, ptr %8, align 4
  %25 = call i32 @Hanoirecursive(i32 0, i32 %21, i32 %22, i32 %23, i32 %24)
  store i32 %25, ptr %10, align 4
  %26 = call i32 (ptr, ...) @printf(ptr @5)
  %27 = load i32, ptr %6, align 4
  %28 = call i32 (ptr, ...) @printf(ptr @0, i32 %27)
  %29 = call i32 (ptr, ...) @printf(ptr @6)
  %30 = load i32, ptr %7, align 4
  %31 = call i32 (ptr, ...) @printf(ptr @0, i32 %30)
  %32 = call i32 (ptr, ...) @printf(ptr @7)
  %33 = load i32, ptr %9, align 4
  %34 = call i32 (ptr, ...) @printf(ptr @1, i32 %33)
  %35 = load i32, ptr %6, align 4
  %36 = sub i32 %35, 1
  %37 = load i32, ptr %8, align 4
  %38 = load i32, ptr %7, align 4
  %39 = load i32, ptr %9, align 4
  %40 = call i32 @Hanoirecursive(i32 0, i32 %36, i32 %37, i32 %38, i32 %39)
  store i32 %40, ptr %10, align 4
  br label %s

s:                                                ; preds = %if, %el
  ret i32 0
}

define i32 @main() {
EntryBlock:
  %0 = call i32 @Hanoistart(i32 0, i32 5)
  %1 = call i32 (ptr, ...) @printf(ptr @1, i32 %0)
  ret i32 0
}
